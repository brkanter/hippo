% Compute bootstrapped confidence interval.%%   USAGE%       [m,l,u,sampleData] = calc.bootCI(data,type,<p>,<nStrap>)%       data           vector of data%       type           'mean' or 'median'%       p              (optional) percentile (default = 95)%       nStrap         (optional) number of iterations (default = 10000)%%   OUTPUTS%       m              grand mean/median%       l              lower bound%       u              upper bound%       sampleData     1 x nStrap array of sample means/medians%%   SEE ALSO%       calc.bootEffectSize%       plt.swarmCI%% Written by BRK 2019function [m,l,u,sampleData] = bootCI(data,type,p,nStrap)%% defaultsif nargin < 3    p = 95;endif nargin < 4    nStrap = 10000;end%% sample data with replacement 10000 times, computing the average of each samplesampleData = nan(nStrap,1);for i = 1:nStrap    if strcmpi(type,'mean')        sampleData(i) = nanmean(randsample(data,numel(data),'true'));    elseif strcmpi(type,'median')        sampleData(i) = nanmedian(randsample(data,numel(data),'true'));    endend%% grand averageif strcmpi(type,'mean')    m = nanmean(sampleData);elseif strcmpi(type,'median')    m = nanmedian(sampleData);end%% confidence intervallims = [(100-p)/2 100-((100-p)/2)];cInt = prctile(sort(sampleData),lims);l = cInt(1);u = cInt(2);